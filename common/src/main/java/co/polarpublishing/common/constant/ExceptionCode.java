package co.polarpublishing.common.constant;

/**
 * Exception codes.
 *
 * @author FMRGJ
 */
public enum ExceptionCode {

  MARKETPLACE_NOT_FOUND_EXCEPTION(4000),
  STORE_NOT_FOUND_EXCEPTION(4001),
  MARKETPLACE_ALREADY_EXIST_EXCEPTION(4002),
  COUNTRY_NOT_FOUND_EXCEPTION(4003),
  BAD_REQUEST(2000),
  UNAUTHORIZED_OPERATION_EXCEPTION(2013),
  KEEPA_API_RATE_LIMIT_EXCEED_EXCEPTION(5000),
  INVALID_ASIN_EXCEPTION(2012),
  ONLY_ABORTED_BOOK_ACQUISITION_RETRY_ALLOWED_EXCEPTION(2014),
  UNSPPORTED_MARKETPLACE_EXCEPTION(5000),
  UNSUPPORTED_PAGE_EXCEPTION(5001),
  SCRAPING_EXCEPTION(5002),
  OUT_OF_DATE_EXCEPTION(1000),
  ROBOT_CHECKING_EXCEPTION(16000),
  KEYWORD_RESEARCH_SESSION_NOT_FOUND_EXCEPTION(3007),
  PREFERENCE_NOT_FOUND_EXCEPTION(1000),
  EMPTY_SEARCH_RESULT_EXCEPTION(5010),

  // BOOK & KEYWORD TRACKING DOMAIN EXCEPTIONS
  BOOK_ACQUISITION_SESSION_ALREADY_EXIST(6001),
  BOOK_ACQUISITION_IN_PROGRESS_EXCEPTION(6002),
  BOOK_ACQUISITION_SESSION_NOT_FOUND_EXCEPTION(2011),
  BOOK_TRACKING_LIMIT_EXCEEDED_EXCEPTION(2050),
  KEYWORD_TRACKING_LIMIT_EXCEEDED_EXCEPTION(3050),
  NICHE_FINDER_LIMIT_EXCEEDED_EXCEPTION(3060),

  // USER MANAGEMENT DOMAIN EXCEPTIONS
  USER_NOT_FOUND_EXCEPTION(1000),
  UNKNOWN_SUBSCRIPTION_PLAN_EXCEPTION(1001),
  USER_FEATURE_USAGE_LIMIT_EXCEEDED_EXCEPTION(1002);

  private final int code;

  private ExceptionCode(int code) {
    this.code = code;
  }

  public int getCode() {
    return code;
  }

}
